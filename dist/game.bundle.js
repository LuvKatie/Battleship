(()=>{var e={551:(e,t,s)=>{"use strict";s.d(t,{V:()=>i});class i{constructor(e){this.id=e,this.board=function(){let e=[],t=1,s=1;for(;s<=10&&t<=10;){if(10==t&&10==s)return e.push(`${t}-${s}`),e;10==s&&(e.push(`${t}-${s}`),t++,s=1),e.push(`${t}-${s}`),s++}}(),this.hit=0,this.miss=0,this.ships=[]}placeShip(e,t,s){if(!(e[0]<1||e[1]<1||e[0]>10||e[1]>10||2!==e.length)&&["up","left","right","down"].includes(t)){for(let i=0;i<s.length;i++)switch(t){case"up":if(e[0]-s.length<1)break;document.querySelector(`.${this.id}-${e[0]-i}-${e[1]}`).classList.add("ship");break;case"left":if(e[1]-s.length<1)break;document.querySelector(`.${this.id}-${e[0]}-${e[1]-i}`).classList.add("ship");break;case"right":if(e[1]+s.length<1)break;document.querySelector(`.${this.id}-${e[0]}-${e[1]+i}`).classList.add("ship");break;case"down":if(e[0]+s.length>10)break;document.querySelector(`.${this.id}-${e[0]+i}-${e[1]}`).classList.add("ship")}return!0}}receiveAttack(e){return this.placeShip([1,2],"up",[]).every((t=>e.includes(t)))?"hit":(this.miss+=1,"miss")}allSunk(){}}},630:e=>{e.exports={Ship:class{constructor(e,t){this.length=e,this.id=t,this.damage=0,this.sunk=!1,this.cords=[]}hit(e){return this.damage+=1,this.damage}isSunk(){return this.damage==this.length?this.sunk=!0:this.sunk=!1,this.sunk}}}}},t={};function s(i){var r=t[i];if(void 0!==r)return r.exports;var h=t[i]={exports:{}};return e[i](h,h.exports,s),h.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=s(551);const t=new(s(630).Ship)(4),i=new e.V("player"),r=new e.V("cpu");i.placeShip([5,5],"up",t),i.placeShip([7,5],"left",t),r.placeShip([5,5],"up",t),r.placeShip([7,5],"left",t)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Ry9DUixFQUFPQyxPQUNmLENDckJBTyxFQUFvQkssRUFBS2IsSUFDeEIsSUFBSWMsRUFBU2QsR0FBVUEsRUFBT2UsV0FDN0IsSUFBT2YsRUFBaUIsUUFDeEIsSUFBTSxFQUVQLE9BREFRLEVBQW9CUSxFQUFFRixFQUFRLENBQUVHLEVBQUdILElBQzVCQSxDQUFNLEVDTGROLEVBQW9CUSxFQUFJLENBQUNmLEVBQVNpQixLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hWLEVBQW9CWSxFQUFFRixFQUFZQyxLQUFTWCxFQUFvQlksRUFBRW5CLEVBQVNrQixJQUM1RUUsT0FBT0MsZUFBZXJCLEVBQVNrQixFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsSUFFMUUsRUNORFgsRUFBb0JZLEVBQUksQ0FBQ0ssRUFBS0MsSUFBVUwsT0FBT00sVUFBVUMsZUFBZUMsS0FBS0osRUFBS0MsRyxnQ0NXbEYsTUFBTUksRUFBUSxJLE9BQUk1QixNQUFLLEdBQ2pCNkIsRUFBYyxJQUFJLElBQVUsVUFDNUJDLEVBQVcsSUFBSSxJQUFVLE9BRS9CRCxFQUFZOUMsVUFBVSxDQUFDLEVBQUcsR0FBSSxLQUFNNkMsR0FDcENDLEVBQVk5QyxVQUFVLENBQUMsRUFBRyxHQUFJLE9BQVE2QyxHQUV0Q0UsRUFBUy9DLFVBQVUsQ0FBQyxFQUFHLEdBQUksS0FBTTZDLEdBQ2pDRSxFQUFTL0MsVUFBVSxDQUFDLEVBQUcsR0FBSSxPQUFRNkMsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnBhY2stamVzdC10ZW1wbGF0ZS8uL3NyYy9zY3JpcHRzL2dhbWVib2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJwYWNrLWplc3QtdGVtcGxhdGUvLi9zcmMvc2NyaXB0cy9tYWluLmpzIiwid2VicGFjazovL3dlYnBhY2stamVzdC10ZW1wbGF0ZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly93ZWJwYWNrLWplc3QtdGVtcGxhdGUvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vd2VicGFjay1qZXN0LXRlbXBsYXRlL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly93ZWJwYWNrLWplc3QtdGVtcGxhdGUvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly93ZWJwYWNrLWplc3QtdGVtcGxhdGUvLi9zcmMvc2NyaXB0cy9nYW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBHYW1lYm9hcmQge1xuICAgIGNvbnN0cnVjdG9yKGlkKSB7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5ib2FyZCA9IGNyZWF0ZUJvYXJkKCk7XG4gICAgICAgIHRoaXMuaGl0ID0gMDtcbiAgICAgICAgdGhpcy5taXNzID0gMDtcbiAgICAgICAgLy8gRmlsbCB0aGlzLnNoaXBzIHdpdGggc2hpcHMgZnJvbSBwbGFjZVNoaXBcbiAgICAgICAgdGhpcy5zaGlwcyA9IFtdO1xuICAgIH1cblxuICAgIHBsYWNlU2hpcChjb3JkLCBkaXIsIHNoaXApIHtcbiAgICAgICAgY29uc3QgZGlyZWN0aW9ucyA9IFtcInVwXCIsIFwibGVmdFwiLCBcInJpZ2h0XCIsIFwiZG93blwiXTtcbiAgICAgICAgaWYgKCAgIGNvcmRbMF0gPCAxIFxuICAgICAgICAgICAgfHwgY29yZFsxXSA8IDFcbiAgICAgICAgICAgIHx8IGNvcmRbMF0gPiAxMFxuICAgICAgICAgICAgfHwgY29yZFsxXSA+IDEwXG4gICAgICAgICAgICB8fCBjb3JkLmxlbmd0aCAhPT0gMlxuICAgICAgICAgICAgfHwgIWRpcmVjdGlvbnMuaW5jbHVkZXMoZGlyKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBzd2l0Y2goZGlyKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAndXAnOiBpZiAoY29yZFswXSAtIHNoaXAubGVuZ3RoIDwgMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzcXVhcmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHt0aGlzLmlkfS0ke2NvcmRbMF0gLSBpfS0ke2NvcmRbMV19YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKFwic2hpcFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ2xlZnQnOiBpZiAoY29yZFsxXSAtIHNoaXAubGVuZ3RoIDwgMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzcXVhcmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHt0aGlzLmlkfS0ke2NvcmRbMF19LSR7Y29yZFsxXSAtIGl9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKFwic2hpcFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ3JpZ2h0JzogaWYgKGNvcmRbMV0gKyBzaGlwLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3F1YXJlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7dGhpcy5pZH0tJHtjb3JkWzBdfS0ke2NvcmRbMV0gKyBpfWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LmFkZChcInNoaXBcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdkb3duJzogaWYgKGNvcmRbMF0gKyBzaGlwLmxlbmd0aCA+IDEwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNxdWFyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3RoaXMuaWR9LSR7Y29yZFswXSArIGl9LSR7Y29yZFsxXX1gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3F1YXJlLmNsYXNzTGlzdC5hZGQoXCJzaGlwXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgLy8gQ3VycmVudCBjb2RlIGlzIGZvciBUZXN0c1xuICAgIHJlY2VpdmVBdHRhY2soY29yZCkge1xuICAgICAgICBjb25zdCBjb3JkTWF0Y2ggPSAodmFsKSA9PiBjb3JkLmluY2x1ZGVzKHZhbCk7XG5cbiAgICAgICAgLy8gV2lsbCBoYXZlIHRvIGNoYW5nZSB0aGVzZSBwYXJhbWV0ZXJzIHRvIGFuIGFjdHVhbCBhdHRhY2tcbiAgICAgICAgLy8gVGhpcyBhc3N1bWVzIHdlIGFscmVhZHkgaGF2ZSBhIHNoaXAgaW4gcGxhY2Ugb24gdGhlIGJvYXJkXG4gICAgICAgIC8vIFdoaWNoIG1lYW5zIHdlIHdpbGwgaGF2ZSB0byB0ZXN0IGlmIHRoZSAoIGNvcmQgKSBtYXRjaGVzIGFuIGV4aXN0aW5nIHNoaXAgb24gW3gsIHldIGNvcmRpbmF0ZXNcbiAgICAgICAgLy8gTmVlZCBhIHdheSB0byB0cmFjayBHYW1lYm9hcmQgYW5kIFNoaXBzIG9uIHNhaWQgR2FtZWJvYXJkLlxuICAgICAgICBcbiAgICAgICAgaWYodGhpcy5wbGFjZVNoaXAoWzEsIDJdLCBcInVwXCIsIFtdKS5ldmVyeShjb3JkTWF0Y2gpKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJoaXRcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMubWlzcyArPSAxO1xuICAgICAgICByZXR1cm4gXCJtaXNzXCI7XG4gICAgfVxuXG4gICAgYWxsU3VuaygpIHtcbiAgICAgICAgLy8gUmVwb3J0IGlmIGFsbCBzaGlwcyBoYXZlIGJlZW4gc3VuayBvbiBhbnkgZ2l2ZW4gcGxheWVyJ3MgYm9hcmRcbiAgICAgICAgLy8gUGxheWVycyB3aWxsIGVhY2ggaW5pdGlhdGUgYSBHYW1lYm9hcmQgY2xhc3MgZm9yIHRoZWlyIG93biBzaWRlIHRvIHBsYWNlIHNoaXBzXG4gICAgICAgIC8vIFdpbGwgY2hlY2sgdGhlIHRoaXMuc2hpcHMgYXJyYXkgYW5kIGlmIGFsbCBvYmplY3RzIHJldHVybiBzdW5rIHRvIGJlIHRydWVcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCb2FyZCgpIHtcbiAgICBsZXQgYm9hcmRBcnIgPSBbXTtcblxuICAgIGxldCB4ID0gMTtcbiAgICBsZXQgeSA9IDE7XG5cbiAgICB3aGlsZSh5IDw9IDEwICYmIHggPD0gMTApIHtcbiAgICAgICAgaWYoeCA9PSAxMCAmJiB5ID09IDEwKSB7XG4gICAgICAgICAgICBib2FyZEFyci5wdXNoKGAke3h9LSR7eX1gKVxuICAgICAgICAgICAgcmV0dXJuIGJvYXJkQXJyO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHkgPT0gMTApIHtcbiAgICAgICAgICAgIGJvYXJkQXJyLnB1c2goYCR7eH0tJHt5fWApXG4gICAgICAgICAgICB4KytcbiAgICAgICAgICAgIHkgPSAxO1xuICAgICAgICB9XG5cbiAgICAgICAgYm9hcmRBcnIucHVzaChgJHt4fS0ke3l9YCk7XG4gICAgICAgIHkrK1xuICAgIH1cbn0iLCJjbGFzcyBTaGlwIHtcbiAgICBjb25zdHJ1Y3RvcihsZW5ndGgsIGlkKSB7XG4gICAgICAgIHRoaXMubGVuZ3RoID0gbGVuZ3RoO1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuZGFtYWdlID0gMDtcbiAgICAgICAgdGhpcy5zdW5rID0gZmFsc2U7XG4gICAgICAgIC8vIEFkZCBjb3JkaW5hdGVzIHdoZW4gcGxhY2VTaGlwIGdldHMgY2FsbGVkIG9uIFNoaXAgb2JqZWN0XG4gICAgICAgIC8vIFdlIGNhbiBydW4gaGl0IHdoZW4gcmVjZWl2ZUF0dGFjayBtYXRjaGVzIG9uZSBvZiB0aGUgU2hpcCBvYmplY3QncyBjb3JkaW5hdGVzXG4gICAgICAgIHRoaXMuY29yZHMgPSBbXTtcbiAgICB9XG4gICAgXG4gICAgaGl0KGNvcmQpIHtcbiAgICAgICAgdGhpcy5kYW1hZ2UgKz0gMTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGFtYWdlO1xuICAgIH1cbiAgICBcbiAgICBpc1N1bmsoKSB7XG4gICAgICAgIHRoaXMuZGFtYWdlID09IHRoaXMubGVuZ3RoID8gdGhpcy5zdW5rID0gdHJ1ZSA6IHRoaXMuc3VuayA9IGZhbHNlO1xuICAgICAgICByZXR1cm4gdGhpcy5zdW5rO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFNoaXAsXG59IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsImltcG9ydCB7R2FtZWJvYXJkfSBmcm9tIFwiLi9nYW1lYm9hcmRcIlxuaW1wb3J0IHtTaGlwfSBmcm9tIFwiLi9tYWluXCJcblxuZXhwb3J0IGZ1bmN0aW9uIGJvYXJkRXZlbnQoc3F1YXJlcykge1xuICAgIHNxdWFyZXMuZm9yRWFjaChzcSA9PiB7XG4gICAgICAgIHNxLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG5cbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5cbmNvbnN0IHNoaXAxID0gbmV3IFNoaXAoNCk7XG5jb25zdCBwbGF5ZXJCb2FyZCA9IG5ldyBHYW1lYm9hcmQoXCJwbGF5ZXJcIik7XG5jb25zdCBjcHVCb2FyZCA9IG5ldyBHYW1lYm9hcmQoXCJjcHVcIik7XG5cbnBsYXllckJvYXJkLnBsYWNlU2hpcChbNSwgNV0sIFwidXBcIiwgc2hpcDEpO1xucGxheWVyQm9hcmQucGxhY2VTaGlwKFs3LCA1XSwgXCJsZWZ0XCIsIHNoaXAxKTtcblxuY3B1Qm9hcmQucGxhY2VTaGlwKFs1LCA1XSwgXCJ1cFwiLCBzaGlwMSk7XG5jcHVCb2FyZC5wbGFjZVNoaXAoWzcsIDVdLCBcImxlZnRcIiwgc2hpcDEpOyJdLCJuYW1lcyI6WyJHYW1lYm9hcmQiLCJjb25zdHJ1Y3RvciIsImlkIiwidGhpcyIsImJvYXJkIiwiYm9hcmRBcnIiLCJ4IiwieSIsInB1c2giLCJjcmVhdGVCb2FyZCIsImhpdCIsIm1pc3MiLCJzaGlwcyIsInBsYWNlU2hpcCIsImNvcmQiLCJkaXIiLCJzaGlwIiwibGVuZ3RoIiwiaW5jbHVkZXMiLCJpIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVjZWl2ZUF0dGFjayIsImV2ZXJ5IiwidmFsIiwiYWxsU3VuayIsIm1vZHVsZSIsImV4cG9ydHMiLCJTaGlwIiwiZGFtYWdlIiwic3VuayIsImNvcmRzIiwiaXNTdW5rIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzaGlwMSIsInBsYXllckJvYXJkIiwiY3B1Qm9hcmQiXSwic291cmNlUm9vdCI6IiJ9