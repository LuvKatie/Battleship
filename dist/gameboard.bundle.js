(()=>{var e={630:e=>{e.exports={Ship:class{constructor(e){this.length=e,this.damage=0,this.sunk=!1}hit(){return this.damage+=1,this.damage}isSunk(){return this.damage==this.length?this.sunk=!0:this.sunk=!1,this.sunk}}}}},t={};function s(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,s),a.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";const e=new(s(630).Ship)(4),t=new class{constructor(){this.board=function(){let e=[],t=1,s=1;for(;s<=10&&t<=10;){if(10==t&&10==s)return e.push([t,s]),e;10==s&&(e.push([t,s]),t++,s=1),e.push([t,s]),s++}}(),this.hit=0,this.miss=0,this.ships=[]}placeShip(t,s){if(!(t[0]<1||t[1]<1||t[0]>10||t[1]>10||2!==t.length)&&["up","left","right","down"].includes(s)){for(let r=1;r<=e.length;r++)switch(s){case"up":if(t[0]-e.length<1)break;document.querySelector(`.${t[0],t[1]}`).classList.add("ship");break;case"left":if(t[1]-e.length<1)break;document.querySelector("."+(t[0],t[1]-r)).classList.add("ship");break;case"right":if(t[1]+e.length<1)break;document.querySelector(`.${t[0],t[1]+r}`).classList.add("ship");break;case"down":if(t[0]+e.length>10)break;document.querySelector(`.${t[0],t[1]}`).classList.add("ship")}return[`${t}`,s]}}receiveAttack(e){return this.placeShip([1,2],"up").every((t=>e.includes(t)))?"hit":(this.miss+=1,"miss")}allSunk(){}};console.log(t.placeShip([1,2],"up"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,